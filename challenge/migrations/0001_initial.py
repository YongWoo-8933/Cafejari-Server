# Generated by Django 4.2.1 on 2023-09-12 16:52

import challenge.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=63)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to=challenge.models.challenge_image_upload_path)),
                ('available', models.BooleanField(default=True)),
                ('start', models.DateTimeField()),
                ('finish', models.DateTimeField()),
                ('participant_limit', models.IntegerField(blank=True, default=None, null=True)),
                ('goal', models.IntegerField()),
            ],
            options={
                'db_table': 'challenge_challenge',
                'db_table_comment': '기본 챌린지 모델',
                'ordering': ['-start'],
            },
        ),
        migrations.CreateModel(
            name='ChallengeMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_rate', models.DecimalField(decimal_places=2, max_digits=3)),
                ('description', models.TextField(max_length=63)),
                ('point', models.IntegerField()),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'challenge_challenge_milestone',
                'db_table_comment': '챌린지의 포인트 정산 지점 모델',
                'ordering': ['-challenge'],
            },
        ),
        migrations.CreateModel(
            name='ChallengePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rewarded_at', models.DateTimeField(auto_now_add=True)),
                ('point', models.IntegerField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'challenge_point',
                'db_table_comment': '챌린지 보상 포인트 모델',
                'ordering': ['-rewarded_at'],
            },
        ),
        migrations.CreateModel(
            name='Challenger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_rate', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('count', models.IntegerField(default=0)),
                ('challenge', models.ForeignKey(db_column='challenge', on_delete=django.db.models.deletion.CASCADE, related_name='challenger', to='challenge.challenge')),
            ],
            options={
                'db_table': 'challenge_challenger',
                'db_table_comment': '챌린지 도전자 모델',
                'ordering': ['-challenge'],
            },
        ),
    ]
